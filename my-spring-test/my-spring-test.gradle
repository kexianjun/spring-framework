description "my spring test"

dependencyManagement {
    imports {
        mavenBom "org.junit:junit-bom:${junit5Version}"
        mavenBom "io.projectreactor:reactor-bom:${reactorVersion}"
        mavenBom "io.netty:netty-bom:${nettyVersion}"
    }
}

dependencies {
    compile(project(":spring-core"))
    optional(project(":spring-aop"))
    optional(project(":spring-beans"))
    optional(project(":spring-context"))
    optional(project(":spring-jdbc"))
    optional(project(":spring-orm"))
    optional(project(":spring-tx"))
    optional(project(":spring-web"))
    optional(project(":spring-webflux"))
    optional(project(":spring-webmvc"))
    optional(project(":spring-websocket"))
    optional(project(":spring-messaging"))

    testCompile(project(":spring-context-support"))
    testCompile(project(":spring-oxm"))
    testCompile("javax.annotation:javax.annotation-api:1.3.2")
    testCompile("javax.cache:cache-api:1.1.0")
    testCompile("javax.ejb:javax.ejb-api:3.2")
    testCompile("javax.interceptor:javax.interceptor-api:1.2.2")
    testCompile("javax.mail:javax.mail-api:1.6.2")
    testCompile("org.hibernate:hibernate-core:5.4.2.Final")
    testCompile("org.hibernate:hibernate-validator:6.0.16.Final")
    // Enable use of the JUnit Platform Runner
    testCompile("org.junit.platform:junit-platform-runner")
    testCompile("org.junit.jupiter:junit-jupiter-params")
    testCompile("com.fasterxml.jackson.core:jackson-databind:${jackson2Version}")
    testCompile("com.thoughtworks.xstream:xstream:1.4.10")
    testCompile("com.rometools:rome:1.12.0")
    testCompile("org.apache.tiles:tiles-api:${tiles3Version}")
    testCompile("org.apache.tiles:tiles-core:${tiles3Version}", withoutJclOverSlf4J)
    testCompile("org.apache.tiles:tiles-servlet:${tiles3Version}", withoutJclOverSlf4J)
    testCompile("org.hsqldb:hsqldb:${hsqldbVersion}")
    testCompile("org.apache.httpcomponents:httpclient:4.5.7") {
        exclude group: "commons-logging", module: "commons-logging"
    }
    testCompile("io.projectreactor.netty:reactor-netty")
    testCompile("de.bechte.junit:junit-hierarchicalcontextrunner:4.12.1")
    // Pull in the latest JUnit 5 Launcher API and the Vintage engine as well
    // so that we can run JUnit 4 tests in IntelliJ IDEA.
    testRuntime("org.junit.jupiter:junit-jupiter-engine")
    testRuntime("org.junit.platform:junit-platform-launcher")
    testRuntime("org.junit.vintage:junit-vintage-engine")
    testRuntime("org.glassfish:javax.el:3.0.1-b08")
    testRuntime("com.sun.xml.bind:jaxb-core:2.3.0.1")
    testRuntime("com.sun.xml.bind:jaxb-impl:2.3.0.1")
}

task testNG(type: Test) {
    description = "Runs TestNG tests."
    useTestNG()
    scanForTestClasses = false
    include(["**/testng/**/*Tests.class", "**/testng/**/*Test.class"])
    // Show STD_OUT & STD_ERR of the test JVM(s) on the console:
    // testLogging.showStandardStreams = true
    // forkEvery 1
}

task testJUnitJupiter(type: Test) {
    description = "Runs JUnit Jupiter tests."
    useJUnitPlatform {
        includeEngines "junit-jupiter"
        excludeTags "failing-test-case"
    }
    filter {
        includeTestsMatching "org.springframework.test.context.junit.jupiter.*"
    }
    // Java Util Logging for the JUnit Platform.
    // systemProperty("java.util.logging.manager", "org.apache.logging.log4j.jul.LogManager")
}

test {
    description = "Runs JUnit 4 tests."
    dependsOn testJUnitJupiter, testNG
    useJUnit()
    scanForTestClasses = false
    include(["**/*Tests.class", "**/*Test.class"])
    exclude(["**/testng/**/*.*", "**/jupiter/**/*.*"])
}

task aggregateTestReports(type: TestReport) {
    description = "Aggregates JUnit and TestNG test reports."
    destinationDir = test.reports.html.destination
    reportOn test, testJUnitJupiter, testNG
}

check.dependsOn aggregateTestReports
